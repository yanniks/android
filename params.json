{"name":"CM10.1 für HTC Desire HD","tagline":"Misc Android stuff","body":"Die alternative Android ROM CyanogenMod ist aufgrund der vielen Erweiterungen und Möglichkeiten bei den Anwendern sehr beliebt. Leider wird seit Android 4 das Desire HD nicht mehr unterstützt. Daher biete ich euch hier ein Tutorial an, wie ihr eure eigene CyanogenMod Version für das Desire HD auf Basis von Android 4.2.2 erstellen könnt.\r\n\r\nVoraussetzungen:\r\n\r\nUbuntu 12.10 64 Bit (Mac OS X funktioniert leider nicht, mit VMware Fusion könnt ihr VMs erstellen)\r\nmindestens 50 GB Platz auf der Festplatte, mehr ist gut\r\nTutorial:\r\n\r\nZuerst öffnet den Terminal, indem ihr auf der Dash-Startseite (Feld links oben) nach “Terminal” sucht und öffnet\r\nGebt nun die folgenden Befehle ein:\r\nsudo apt-get install openjdk-6-jdk git-core python \\\r\n  gnupg flex bison gperf build-essential \\\r\n  zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \\\r\n  x11proto-core-dev libx11-dev lib32readline-gplv2-dev lib32z-dev \\\r\n  libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown \\\r\n  libxml2-utils xsltproc libx11-dev:i386 lzop \\\r\n  git gnupg flex bison gperf build-essential \\\r\n  zip curl libc6-dev libncurses5-dev x11proto-core-dev \\\r\n  libx11-dev libreadline6-dev libgl1-mesa-glx \\\r\n  libgl1-mesa-dev g++-multilib mingw32 tofrodos \\\r\n  python-markdown libxml2-utils xsltproc zlib1g-dev\r\nLadet anschließend von dieser Website das Android SDK für Linux runter: http://developer.android.com/sdk/index.html\r\nGebt nun im Terminal den folgenden Befehl ein:\r\ncd && nano .bashrc\r\nIn dem anschließenden Fenster geht mit dem Pfeil nach unten bis zur untersten Stelle und fügt nun folgende Zeilen ein, danach beendet das Programm mit Steuerung + O, Enter und Steuerung +X:\r\n# Android tools\r\nexport PATH=${PATH}:~/android-sdk/tools\r\nexport PATH=${PATH}:~/android-sdk/platform-tools\r\nexport PATH=${PATH}:~/bin\r\nGebt nun nano .profile ein und macht nun das Selbe wie in Schritt 5, fügt stattdessen aber folgende Zeile ein:\r\nPATH=\"$HOME/android-sdk-Verzeichnis/tools:$HOME/android-sdk-Verzeichnis/platform-tools:$PATH\"\r\nLadet nun die Updates in dem Fenster nach dem Eintippen von “android” herunter.\r\nAls nächstes sind mal wieder einige Kommandos im Terminal nötig:\r\nmkdir ~/bin\r\nPATH=~/bin:$PATH\r\ncurl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo\r\nchmod a+x ~/bin/repo\r\nmkdir cm10\r\ncd cm10/\r\nrepo init -u git://github.com/yanniks/android.git -b cm-10.1\r\nBeantwortet nun die Fragen, danach könnt ihr schon fast mit dem Erstellen der ROM beginnen:\r\nrepo sync\r\ncd vendor/cm/\r\n./get-prebuilts\r\ncd ../../\r\n. build/envsetup.sh\r\nlunch cm_ace-userdebug\r\nmka bacon\r\nIn dem Ordner out/target/product/ace findet ihr anschließend die fertige Build, die ihr auf euer Gerät kopieren und anschließend nutzen könnt.\r\nBuild aktualisieren:\r\n\r\nWollt ihr eure Build aktualisieren wollt, gebt einfach hintereinander folgende Kommandos ein, danach findet ihr wieder im oben genannten Ordner eine neue Build:\r\n\r\ncd cm10/\r\nrm out/target/product/ace/system/build.prop\r\nrm out/target/product/ace/cm-*\r\nrepo sync\r\ncd vendor/cm/\r\n./get-prebuilts\r\ncd ../../\r\n. build/envsetup.sh\r\nlunch cm_ace-userdebug\r\nmka bacon","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}